{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paska\\\\Documents\\\\FERI_2\\\\2semester\\\\RazvojAI\\\\Vaja3\\\\rain_v4_sample\\\\sp_v4_sample\\\\frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from 'react';\nimport { UserContext } from '../userContext';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const userContext = useContext(UserContext);\n  async function Login(e) {\n    e.preventDefault();\n    const res = await fetch(\"http://localhost:3001/users/login\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password\n      })\n    });\n    const data = await res.json();\n    if (data._id !== undefined) {\n      userContext.setUserContext(data);\n    } else {\n      setUsername(\"\");\n      setPassword(\"\");\n      setError(\"Invalid username or password\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"login-form\",\n    onSubmit: Login,\n    children: [userContext.user ? /*#__PURE__*/_jsxDEV(Navigate, {\n      replace: true,\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 33\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Prijava\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      placeholder: \"Uporabni\\u0161ko ime\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Geslo\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      name: \"submit\",\n      value: \"Prijava\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"error-label\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"MnRMTZXOJajWcruPIl0XhuRhs5Q=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useContext","useState","UserContext","Navigate","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","error","setError","userContext","e","preventDefault","res","fetch","method","credentials","headers","body","JSON","stringify","data","json","_id","undefined","setUserContext","className","onSubmit","children","user","replace","to","fileName","_jsxFileName","lineNumber","columnNumber","type","name","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/paska/Documents/FERI_2/2semester/RazvojAI/Vaja3/rain_v4_sample/sp_v4_sample/frontend/src/components/Login.js"],"sourcesContent":["import { useContext, useState } from 'react';\r\nimport { UserContext } from '../userContext';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nfunction Login(){\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const userContext = useContext(UserContext); \r\n\r\n    async function Login(e){\r\n        e.preventDefault();\r\n        const res = await fetch(\"http://localhost:3001/users/login\", {\r\n            method: \"POST\",\r\n            credentials: \"include\",\r\n            headers: { 'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                username: username,\r\n                password: password\r\n            })\r\n        });\r\n        const data = await res.json();\r\n        if(data._id !== undefined){\r\n            userContext.setUserContext(data);\r\n        } else {\r\n            setUsername(\"\");\r\n            setPassword(\"\");\r\n            setError(\"Invalid username or password\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"login-form\" onSubmit={Login}>\r\n            {userContext.user ? <Navigate replace to=\"/\" /> : \"\"}\r\n            <h2>Prijava</h2>\r\n            <input \r\n                type=\"text\" \r\n                name=\"username\" \r\n                placeholder=\"UporabniÅ¡ko ime\"\r\n                value={username} \r\n                onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n            <input \r\n                type=\"password\" \r\n                name=\"password\" \r\n                placeholder=\"Geslo\"\r\n                value={password} \r\n                onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <input \r\n                type=\"submit\" \r\n                name=\"submit\" \r\n                value=\"Prijava\"\r\n            />\r\n            {error && <label className=\"error-label\">{error}</label>}\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}